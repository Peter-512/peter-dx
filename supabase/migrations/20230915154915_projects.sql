create table "public"."project_images" (
    "id" bigint generated by default as identity not null,
    "project_id" bigint not null,
    "image_url" text not null
);


alter table "public"."project_images" enable row level security;

create table "public"."project_skills" (
    "project_id" bigint not null,
    "skills_id" bigint not null
);


alter table "public"."project_skills" enable row level security;

create table "public"."project_team_members" (
    "project_id" bigint generated by default as identity not null,
    "team_member_id" bigint generated by default as identity not null
);


alter table "public"."project_team_members" enable row level security;

create table "public"."projects" (
    "id" bigint generated by default as identity not null,
    "start_date" date not null,
    "description" text not null,
    "link" text not null,
    "name" text not null
);


alter table "public"."projects" enable row level security;

create table if not exists "public"."skills" (
    "id" bigint generated by default as identity not null,
    "level" text not null,
    "type" text not null,
    "sub_type" text,
    "name" text not null,
    "color" text
);

-- alter table "public"."skills" add column "color" text;
DO $$ 
BEGIN
IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'skills' AND column_name = 'color') THEN
    alter table "public"."skills" add column "color" text;
END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS (
        SELECT constraint_name 
        FROM information_schema.table_constraints 
        WHERE table_name = 'your_table_name' 
        AND constraint_type = 'PRIMARY KEY'
    ) THEN
        ALTER TABLE your_table_name
        ADD CONSTRAINT pk_your_table_name PRIMARY KEY (column_name);
    END IF;
END $$;


alter table "public"."skills" enable row level security;

create table "public"."team_members" (
    "id" bigint generated by default as identity not null,
    "name" text not null,
    "image_url" text not null,
    "github_link" text not null
);


alter table "public"."team_members" enable row level security;

create table if not exists "public"."testimonials" (
    "slug" text not null,
    "received_at" date not null,
    "content" text not null,
    "name" text not null,
    "image_url" text not null,
    "email" text not null,
    "company" text not null,
    "company_logo_url" text not null,
    "description" text not null,
    "quote" text not null
);


alter table "public"."testimonials" enable row level security;

CREATE UNIQUE INDEX if not exists project_images_pkey ON public.project_images USING btree (id);

CREATE UNIQUE INDEX if not exists project_skills_pkey ON public.project_skills USING btree (project_id, skills_id);

CREATE UNIQUE INDEX if not exists project_team_members_pkey ON public.project_team_members USING btree (team_member_id, project_id);

CREATE UNIQUE INDEX if not exists projects_pkey ON public.projects USING btree (id);

CREATE UNIQUE INDEX if not exists skills_name_key ON public.skills USING btree (name);

CREATE UNIQUE INDEX if not exists skills_pkey ON public.skills USING btree (id);

CREATE UNIQUE INDEX if not exists team_members_pkey ON public.team_members USING btree (id);

CREATE UNIQUE INDEX if not exists testimonials_pkey ON public.testimonials USING btree (slug);

alter table "public"."project_images" add constraint "project_images_pkey" PRIMARY KEY using index "project_images_pkey";

alter table "public"."project_skills" add constraint "project_skills_pkey" PRIMARY KEY using index "project_skills_pkey";

alter table "public"."project_team_members" add constraint "project_team_members_pkey" PRIMARY KEY using index "project_team_members_pkey";

alter table "public"."projects" add constraint "projects_pkey" PRIMARY KEY using index "projects_pkey";

alter table "public"."team_members" add constraint "team_members_pkey" PRIMARY KEY using index "team_members_pkey";

alter table "public"."project_images" add constraint "project_images_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE not valid;

alter table "public"."project_images" validate constraint "project_images_project_id_fkey";

alter table "public"."project_skills" add constraint "project_skills_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE not valid;

alter table "public"."project_skills" validate constraint "project_skills_project_id_fkey";

alter table "public"."project_skills" add constraint "project_skills_skills_id_fkey" FOREIGN KEY (skills_id) REFERENCES skills(id) ON DELETE CASCADE not valid;

alter table "public"."project_skills" validate constraint "project_skills_skills_id_fkey";

alter table "public"."project_team_members" add constraint "project_team_members_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE not valid;

alter table "public"."project_team_members" validate constraint "project_team_members_project_id_fkey";

alter table "public"."project_team_members" add constraint "project_team_members_team_member_id_fkey" FOREIGN KEY (team_member_id) REFERENCES team_members(id) ON DELETE CASCADE not valid;

alter table "public"."project_team_members" validate constraint "project_team_members_team_member_id_fkey";

create policy "Enable read access for all users"
on "public"."project_images"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_skills"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_team_members"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."projects"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."team_members"
as permissive
for select
to public
using (true);

